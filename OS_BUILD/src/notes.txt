source : http://www.brokenthorn.com/Resources/OSDev7.html

**********************************

LBA is the # of current sector. This is calculated in order first all the sectors from one head in this completing the first cylinder and then following on.
The first sector is at the outermost cylinder.
The first sector is numbered 1 but first cylinder and head is numbered 0.  

CHS tuples can be mapped to LBA address with the following formula:[5][6]

    LBA = (C × HPC + H) × SPT + (S - 1)

where

    C, H and S are the cylinder number, the head number, and the sector number
    LBA is the logical block address
    HPC is the maximum number of heads per cylinder (reported by disk drive, typically 16 for 28-bit LBA)
    SPT is the maximum number of sectors per track (reported by disk drive, typically 63 for 28-bit LBA)

LBA addresses can be mapped to CHS tuples with the following formula ("mod" is the modulo operation, i.e. the remainder, and "÷" is integer division, i.e. the quotient of the division where any fractional part is discarded):

    C = LBA ÷ (HPC × SPT)
    H = (LBA ÷ SPT) mod HPC Why? ---- what is wrong here? X = (C - 1)* HPC * SPT these should give no of sectors in C-1 cylinder
    														X/SPT = head no. in that particular cylinder 
    S = (LBA mod SPT) + 1
    
**********************************
    
Conversion of segmented addresses to absolute addresses :
	- the segment base address is 16-bit and offset is also 16 bit but we want a 20-bit address for referencing memory.
	- So to convert formula is : 0x1234 seg base 0x0000 offset, 0x12340+0x0000 
	
	
**********************************

Port Mapping, Memory Mapped I/o, DMA Controller
	- Port Mapping individual devices has individual ports assigned to identify the device :
		- These ports may be altogether in different address, this is called as isolated I/o
		- If this is overlapped with memory address space the it is memory mapped I/o
	- DMA :
		- In both of the above cases processor has to some work to fetch the data from device which might not match with speed of processor
		- So DMA controller handles this thing by writing or reading the data directly from memory and communicating that to I/O device
		- A channel for communication between i/o devices and memory directly without involving CPU there.

**********************************

Link : 
ftp://ftp.gnu.org/gnu/binutils/binutils-2.27.tar.gz
ftp://ftp.gnu.org/gnu/gcc/gcc-6.2.0/gcc-6.2.0.tar.gz
http://wiki.osdev.org/GCC_Cross-Compiler
http://louishust.blogspot.in/2012/11/how-to-install-bochs-with-debug.html
http://forum.osdev.org/viewtopic.php?f=1&t=27234
http://wiki.osdev.org/Bare_Bones
http://wiki.osdev.org/Libgcc
http://www.brokenthorn.com/Resources/OSDevIndex.html
http://www.scs.stanford.edu/15au-cs140/pintos/pintos_13.html#SEC168
http://www.muppetlabs.com/~breadbox/software/ELF.txt : ELF file loading and other stuff.
http://systems.ethz.ch/sites/default/files/file/COURSES/2014%20FALL%20COURSES/2014_Fall_SPCA/lectures/x86_64_asm_cheat_sheet.pdf : x86 asm chart


Basic :
    Word: a 2-byte data item
    Doubleword: a 4-byte (32 bit) data item
    Quadword: an 8-byte (64 bit) data item
    Paragraph: a 16-byte (128 bit) area
    Kilobyte: 1024 bytes
    Megabyte: 1,048,576 bytes
